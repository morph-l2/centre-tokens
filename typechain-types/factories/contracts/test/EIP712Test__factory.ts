/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EIP712Test,
  EIP712TestInterface,
} from "../../../contracts/test/EIP712Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "makeDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainSeparator",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "typeHashAndData",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506105d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633be282801461003b578063c729a0291461010f575b600080fd5b6100fd6004803603604081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460018302840111640100000000831117156100a057600080fd5b9193909290916020810190356401000000008111156100be57600080fd5b8201836020820111156100d057600080fd5b803590602001918460018302840111640100000000831117156100f257600080fd5b5090925090506101c3565b60408051918252519081900360200190f35b61019a600480360360a081101561012557600080fd5b81359160ff6020820135169160408201359160608101359181019060a08101608082013564010000000081111561015b57600080fd5b82018360208201111561016d57600080fd5b8035906020019184600183028401116401000000008311171561018f57600080fd5b509092509050610241565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b600061023885858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525061029192505050565b95945050505050565b60006102868787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061030392505050565b979650505050505050565b8151602092830120815191830191909120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818601528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b8051602080830191909120604080517f1901000000000000000000000000000000000000000000000000000000000000818501526022810189905260428082019390935281518082039093018352606201905280519101206000906102868187878760007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156103e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061057e6026913960400191505060405180910390fd5b8360ff16601b141580156103f857508360ff16601c14155b1561044e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806105586026913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156104aa573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661023857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f45435265636f7665723a20696e76616c6964207369676e617475726500000000604482015290519081900360640190fdfe45435265636f7665723a20696e76616c6964207369676e6174757265202776272076616c756545435265636f7665723a20696e76616c6964207369676e6174757265202773272076616c7565a264697066735822122058e3e75b3a9b55d507b3d7c3aa63a46b099b95824cd62153a5caa81048f8711c64736f6c634300060c0033";

type EIP712TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712Test__factory extends ContractFactory {
  constructor(...args: EIP712TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EIP712Test> {
    return super.deploy(overrides || {}) as Promise<EIP712Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EIP712Test {
    return super.attach(address) as EIP712Test;
  }
  override connect(signer: Signer): EIP712Test__factory {
    return super.connect(signer) as EIP712Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712TestInterface {
    return new utils.Interface(_abi) as EIP712TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EIP712Test {
    return new Contract(address, _abi, signerOrProvider) as EIP712Test;
  }
}
